server:
  port: 8188
  servlet:
    context-path: /readerblog

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=readerblog
    username: postgres
    password: admin


  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL94Dialect
        temp:
          use_jdbc_metadata_defaults: false
  thymeleaf:
    encoding: UTF-8

  security:
    oauth2:
      client:
        registration:
#          google:
#            clientId: 5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
#            clientSecret: tWZKVLxaD_ARWsriiiUFYoIk
#            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
#            scope:
#              - email
#              - profile
          facebook:
            clientId: 129531551726792
            clientSecret: 99c2c989cf5375959fe22893634de3d1
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: 7a3e122068db1a452173
            clientSecret: bf38b2dca2a4491abc24fb7a61f81932cc4a5917
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:8188/readerblog/oauth2/redirect
#      - myandroidapp://oauth2/redirect
#      - myiosapp://oauth2/redirect